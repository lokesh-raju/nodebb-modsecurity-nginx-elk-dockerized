{"version":3,"sources":["node_modules/preact/devtools.js"],"names":["global","factory","exports","module","require","define","amd","preact","this","ATTR_KEY","createReactElement","component","type","constructor","key","ref","props","createReactDOMComponent","node","childNodes","nodeType","Node","ELEMENT_NODE","Array","from","isText","TEXT_NODE","_currentElement","textContent","nodeName","toLowerCase","_renderedChildren","map","child","_component","updateReactComponent","_stringText","_inDevTools","typeName","element","displayName","name","createReactCompositeComponent","base","instance","getPublicInstance","getName","state","forceUpdate","bind","setState","_instance","_renderedComponent","instanceMap","Map","componentOrNode","newInstance","has","inst","get","Object","assign","set","nextRootKey","roots","keys","length","findRoots","forEach","createDevToolsBridge","ComponentTree","getNodeFromInstance","getClosestInstanceFromNode","parentNode","document","body","Mount","_instancesByReactRootID","_renderNewRootComponent","Reconciler","mountComponent","performUpdateIfNecessary","receiveComponent","unmountComponent","componentAdded","isRootComponent","_rootID","visitNonCompositeChildren","childInst","componentUpdated","prevRenderedChildren","push","info","_topLevelWrapper","contains","delete","componentRemoved","_parentComponent","__u","parentElement","visitor","initDevTools","__REACT_DEVTOOLS_GLOBAL_HOOK__","bridge","nextAfterMount","options","afterMount","nextAfterUpdate","afterUpdate","nextBeforeUnmount","beforeUnmount","inject"],"mappings":"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","file":"node_modules/preact/devtools.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(require('preact')) :\n\ttypeof define === 'function' && define.amd ? define(['preact'], factory) :\n\t(factory(global.preact));\n}(this, (function (preact) { 'use strict';\n\n\t// render modes\n\n\tvar ATTR_KEY = '__preactattr_';\n\n\t/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n\n\t/**\n\t * Return a ReactElement-compatible object for the current state of a preact\n\t * component.\n\t */\n\tfunction createReactElement(component) {\n\t\treturn {\n\t\t\ttype: component.constructor,\n\t\t\tkey: component.key,\n\t\t\tref: null, // Unsupported\n\t\t\tprops: component.props\n\t\t};\n\t}\n\n\t/**\n\t * Create a ReactDOMComponent-compatible object for a given DOM node rendered\n\t * by preact.\n\t *\n\t * This implements the subset of the ReactDOMComponent interface that\n\t * React DevTools requires in order to display DOM nodes in the inspector with\n\t * the correct type and properties.\n\t *\n\t * @param {Node} node\n\t */\n\tfunction createReactDOMComponent(node) {\n\t\tvar childNodes = node.nodeType === Node.ELEMENT_NODE ? Array.from(node.childNodes) : [];\n\n\t\tvar isText = node.nodeType === Node.TEXT_NODE;\n\n\t\treturn {\n\t\t\t// --- ReactDOMComponent interface\n\t\t\t_currentElement: isText ? node.textContent : {\n\t\t\t\ttype: node.nodeName.toLowerCase(),\n\t\t\t\tprops: node[ATTR_KEY]\n\t\t\t},\n\t\t\t_renderedChildren: childNodes.map(function (child) {\n\t\t\t\tif (child._component) {\n\t\t\t\t\treturn updateReactComponent(child._component);\n\t\t\t\t}\n\t\t\t\treturn updateReactComponent(child);\n\t\t\t}),\n\t\t\t_stringText: isText ? node.textContent : null,\n\n\t\t\t// --- Additional properties used by preact devtools\n\n\t\t\t// A flag indicating whether the devtools have been notified about the\n\t\t\t// existence of this component instance yet.\n\t\t\t// This is used to send the appropriate notifications when DOM components\n\t\t\t// are added or updated between composite component updates.\n\t\t\t_inDevTools: false,\n\t\t\tnode: node\n\t\t};\n\t}\n\n\t/**\n\t * Return the name of a component created by a `ReactElement`-like object.\n\t *\n\t * @param {ReactElement} element\n\t */\n\tfunction typeName(element) {\n\t\tif (typeof element.type === 'function') {\n\t\t\treturn element.type.displayName || element.type.name;\n\t\t}\n\t\treturn element.type;\n\t}\n\n\t/**\n\t * Return a ReactCompositeComponent-compatible object for a given preact\n\t * component instance.\n\t *\n\t * This implements the subset of the ReactCompositeComponent interface that\n\t * the DevTools requires in order to walk the component tree and inspect the\n\t * component's properties.\n\t *\n\t * See https://github.com/facebook/react-devtools/blob/e31ec5825342eda570acfc9bcb43a44258fceb28/backend/getData.js\n\t */\n\tfunction createReactCompositeComponent(component) {\n\t\tvar _currentElement = createReactElement(component);\n\t\tvar node = component.base;\n\n\t\tvar instance = {\n\t\t\tgetPublicInstance: function getPublicInstance() {\n\t\t\t\t// Can be anything other than null\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\t// --- ReactDOMComponent properties\n\t\t\tgetName: function getName() {\n\t\t\t\treturn typeName(_currentElement);\n\t\t\t},\n\n\t\t\t_currentElement: createReactElement(component),\n\t\t\tprops: component.props,\n\t\t\tstate: component.state,\n\t\t\tforceUpdate: component.forceUpdate && component.forceUpdate.bind(component),\n\t\t\tsetState: component.setState && component.setState.bind(component),\n\n\t\t\t// --- Additional properties used by preact devtools\n\t\t\tnode: node\n\t\t};\n\n\t\t// React DevTools exposes the `_instance` field of the selected item in the\n\t\t// component tree as `$r` in the console.  `_instance` must refer to a\n\t\t// React Component (or compatible) class instance with `props` and `state`\n\t\t// fields and `setState()`, `forceUpdate()` methods.\n\t\tinstance._instance = component;\n\n\t\t// If the root node returned by this component instance's render function\n\t\t// was itself a composite component, there will be a `_component` property\n\t\t// containing the child component instance.\n\t\tif (component._component) {\n\t\t\tinstance._renderedComponent = updateReactComponent(component._component);\n\t\t} else {\n\t\t\t// Otherwise, if the render() function returned an HTML/SVG element,\n\t\t\t// create a ReactDOMComponent-like object for the DOM node itself.\n\t\t\tinstance._renderedComponent = updateReactComponent(node);\n\t\t}\n\n\t\treturn instance;\n\t}\n\n\t/**\n\t * Map of Component|Node to ReactDOMComponent|ReactCompositeComponent-like\n\t * object.\n\t *\n\t * The same React*Component instance must be used when notifying devtools\n\t * about the initial mount of a component and subsequent updates.\n\t */\n\tvar instanceMap = typeof Map === 'function' && new Map();\n\n\t/**\n\t * Update (and create if necessary) the ReactDOMComponent|ReactCompositeComponent-like\n\t * instance for a given preact component instance or DOM Node.\n\t *\n\t * @param {Component|Node} componentOrNode\n\t */\n\tfunction updateReactComponent(componentOrNode) {\n\t\tvar newInstance = componentOrNode instanceof Node ? createReactDOMComponent(componentOrNode) : createReactCompositeComponent(componentOrNode);\n\t\tif (instanceMap.has(componentOrNode)) {\n\t\t\tvar inst = instanceMap.get(componentOrNode);\n\t\t\tObject.assign(inst, newInstance);\n\t\t\treturn inst;\n\t\t}\n\t\tinstanceMap.set(componentOrNode, newInstance);\n\t\treturn newInstance;\n\t}\n\n\tfunction nextRootKey(roots) {\n\t\treturn '.' + Object.keys(roots).length;\n\t}\n\n\t/**\n\t * Find all root component instances rendered by preact in `node`'s children\n\t * and add them to the `roots` map.\n\t *\n\t * @param {DOMElement} node\n\t * @param {[key: string] => ReactDOMComponent|ReactCompositeComponent}\n\t */\n\tfunction findRoots(node, roots) {\n\t\tArray.from(node.childNodes).forEach(function (child) {\n\t\t\tif (child._component) {\n\t\t\t\troots[nextRootKey(roots)] = updateReactComponent(child._component);\n\t\t\t} else {\n\t\t\t\tfindRoots(child, roots);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Create a bridge for exposing preact's component tree to React DevTools.\n\t *\n\t * It creates implementations of the interfaces that ReactDOM passes to\n\t * devtools to enable it to query the component tree and hook into component\n\t * updates.\n\t *\n\t * See https://github.com/facebook/react/blob/59ff7749eda0cd858d5ee568315bcba1be75a1ca/src/renderers/dom/ReactDOM.js\n\t * for how ReactDOM exports its internals for use by the devtools and\n\t * the `attachRenderer()` function in\n\t * https://github.com/facebook/react-devtools/blob/e31ec5825342eda570acfc9bcb43a44258fceb28/backend/attachRenderer.js\n\t * for how the devtools consumes the resulting objects.\n\t */\n\tfunction createDevToolsBridge() {\n\t\t// The devtools has different paths for interacting with the renderers from\n\t\t// React Native, legacy React DOM and current React DOM.\n\t\t//\n\t\t// Here we emulate the interface for the current React DOM (v15+) lib.\n\n\t\t// ReactDOMComponentTree-like object\n\t\tvar ComponentTree = {\n\t\t\tgetNodeFromInstance: function getNodeFromInstance(instance) {\n\t\t\t\treturn instance.node;\n\t\t\t},\n\t\t\tgetClosestInstanceFromNode: function getClosestInstanceFromNode(node) {\n\t\t\t\twhile (node && !node._component) {\n\t\t\t\t\tnode = node.parentNode;\n\t\t\t\t}\n\t\t\t\treturn node ? updateReactComponent(node._component) : null;\n\t\t\t}\n\t\t};\n\n\t\t// Map of root ID (the ID is unimportant) to component instance.\n\t\tvar roots = {};\n\t\tfindRoots(document.body, roots);\n\n\t\t// ReactMount-like object\n\t\t//\n\t\t// Used by devtools to discover the list of root component instances and get\n\t\t// notified when new root components are rendered.\n\t\tvar Mount = {\n\t\t\t_instancesByReactRootID: roots,\n\n\t\t\t// Stub - React DevTools expects to find this method and replace it\n\t\t\t// with a wrapper in order to observe new root components being added\n\t\t\t_renderNewRootComponent: function _renderNewRootComponent() /* instance, ... */{}\n\t\t};\n\n\t\t// ReactReconciler-like object\n\t\tvar Reconciler = {\n\t\t\t// Stubs - React DevTools expects to find these methods and replace them\n\t\t\t// with wrappers in order to observe components being mounted, updated and\n\t\t\t// unmounted\n\t\t\tmountComponent: function mountComponent() /* instance, ... */{},\n\t\t\tperformUpdateIfNecessary: function performUpdateIfNecessary() /* instance, ... */{},\n\t\t\treceiveComponent: function receiveComponent() /* instance, ... */{},\n\t\t\tunmountComponent: function unmountComponent() /* instance, ... */{}\n\t\t};\n\n\t\t/** Notify devtools that a new component instance has been mounted into the DOM. */\n\t\tvar componentAdded = function componentAdded(component) {\n\t\t\tvar instance = updateReactComponent(component);\n\t\t\tif (isRootComponent(component)) {\n\t\t\t\tinstance._rootID = nextRootKey(roots);\n\t\t\t\troots[instance._rootID] = instance;\n\t\t\t\tMount._renderNewRootComponent(instance);\n\t\t\t}\n\t\t\tvisitNonCompositeChildren(instance, function (childInst) {\n\t\t\t\tchildInst._inDevTools = true;\n\t\t\t\tReconciler.mountComponent(childInst);\n\t\t\t});\n\t\t\tReconciler.mountComponent(instance);\n\t\t};\n\n\t\t/** Notify devtools that a component has been updated with new props/state. */\n\t\tvar componentUpdated = function componentUpdated(component) {\n\t\t\tvar prevRenderedChildren = [];\n\t\t\tvar instance = instanceMap.get(component);\n\t\t\tif (instance) {\n\t\t\t\tvisitNonCompositeChildren(instance, function (childInst) {\n\t\t\t\t\tprevRenderedChildren.push(childInst);\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Notify devtools about updates to this component and any non-composite\n\t\t\t// children\n\t\t\tinstance = updateReactComponent(component);\n\n\t\t\tReconciler.receiveComponent(instance);\n\t\t\tvisitNonCompositeChildren(instance, function (childInst) {\n\t\t\t\tvar info = {\n\t\t\t\t\t// Must be defined otherwise state updates won't work\n\t\t\t\t\t_topLevelWrapper: instance\n\t\t\t\t};\n\n\t\t\t\tif (!childInst._inDevTools) {\n\t\t\t\t\t// New DOM child component\n\t\t\t\t\tchildInst._inDevTools = true;\n\t\t\t\t\tReconciler.mountComponent(childInst, null, null, info);\n\t\t\t\t} else {\n\t\t\t\t\t// Updated DOM child component\n\t\t\t\t\tReconciler.receiveComponent(childInst, null, null, info);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// For any non-composite children that were removed by the latest render,\n\t\t\t// remove the corresponding ReactDOMComponent-like instances and notify\n\t\t\t// the devtools\n\t\t\tprevRenderedChildren.forEach(function (childInst) {\n\t\t\t\tif (!document.body.contains(childInst.node)) {\n\t\t\t\t\tinstanceMap.delete(childInst.node);\n\t\t\t\t\tReconciler.unmountComponent(childInst);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t/** Notify devtools that a component has been unmounted from the DOM. */\n\t\tvar componentRemoved = function componentRemoved(component) {\n\t\t\tvar instance = updateReactComponent(component);\n\t\t\tvisitNonCompositeChildren(function (childInst) {\n\t\t\t\tinstanceMap.delete(childInst.node);\n\t\t\t\tReconciler.unmountComponent(childInst);\n\t\t\t});\n\t\t\tReconciler.unmountComponent(instance);\n\t\t\tinstanceMap.delete(component);\n\t\t\tif (instance._rootID) {\n\t\t\t\tdelete roots[instance._rootID];\n\t\t\t}\n\t\t};\n\n\t\treturn {\n\t\t\tcomponentAdded: componentAdded,\n\t\t\tcomponentUpdated: componentUpdated,\n\t\t\tcomponentRemoved: componentRemoved,\n\n\t\t\t// Interfaces passed to devtools via __REACT_DEVTOOLS_GLOBAL_HOOK__.inject()\n\t\t\tComponentTree: ComponentTree,\n\t\t\tMount: Mount,\n\t\t\tReconciler: Reconciler\n\t\t};\n\t}\n\n\t/**\n\t * Return `true` if a preact component is a top level component rendered by\n\t * `render()` into a container Element.\n\t */\n\tfunction isRootComponent(component) {\n\t\t// `_parentComponent` is actually `__u` after minification\n\t\tif (component._parentComponent || component.__u) {\n\t\t\t// Component with a composite parent\n\t\t\treturn false;\n\t\t}\n\t\tif (component.base.parentElement && component.base.parentElement[ATTR_KEY]) {\n\t\t\t// Component with a parent DOM element rendered by Preact\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Visit all child instances of a ReactCompositeComponent-like object that are\n\t * not composite components (ie. they represent DOM elements or text)\n\t *\n\t * @param {Component} component\n\t * @param {(Component) => void} visitor\n\t */\n\tfunction visitNonCompositeChildren(component, visitor) {\n\t\tif (!component) return;\n\t\tif (component._renderedComponent) {\n\t\t\tif (!component._renderedComponent._component) {\n\t\t\t\tvisitor(component._renderedComponent);\n\t\t\t\tvisitNonCompositeChildren(component._renderedComponent, visitor);\n\t\t\t}\n\t\t} else if (component._renderedChildren) {\n\t\t\tcomponent._renderedChildren.forEach(function (child) {\n\t\t\t\tvisitor(child);\n\t\t\t\tif (!child._component) visitNonCompositeChildren(child, visitor);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Create a bridge between the preact component tree and React's dev tools\n\t * and register it.\n\t *\n\t * After this function is called, the React Dev Tools should be able to detect\n\t * \"React\" on the page and show the component tree.\n\t *\n\t * This function hooks into preact VNode creation in order to expose functional\n\t * components correctly, so it should be called before the root component(s)\n\t * are rendered.\n\t *\n\t * Returns a cleanup function which unregisters the hooks.\n\t */\n\tfunction initDevTools() {\n\t\tif (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n\t\t\t// React DevTools are not installed\n\t\t\treturn;\n\t\t}\n\n\t\t// Notify devtools when preact components are mounted, updated or unmounted\n\t\tvar bridge = createDevToolsBridge();\n\n\t\tvar nextAfterMount = preact.options.afterMount;\n\t\tpreact.options.afterMount = function (component) {\n\t\t\tbridge.componentAdded(component);\n\t\t\tif (nextAfterMount) nextAfterMount(component);\n\t\t};\n\n\t\tvar nextAfterUpdate = preact.options.afterUpdate;\n\t\tpreact.options.afterUpdate = function (component) {\n\t\t\tbridge.componentUpdated(component);\n\t\t\tif (nextAfterUpdate) nextAfterUpdate(component);\n\t\t};\n\n\t\tvar nextBeforeUnmount = preact.options.beforeUnmount;\n\t\tpreact.options.beforeUnmount = function (component) {\n\t\t\tbridge.componentRemoved(component);\n\t\t\tif (nextBeforeUnmount) nextBeforeUnmount(component);\n\t\t};\n\n\t\t// Notify devtools about this instance of \"React\"\n\t\t__REACT_DEVTOOLS_GLOBAL_HOOK__.inject(bridge);\n\n\t\treturn function () {\n\t\t\tpreact.options.afterMount = nextAfterMount;\n\t\t\tpreact.options.afterUpdate = nextAfterUpdate;\n\t\t\tpreact.options.beforeUnmount = nextBeforeUnmount;\n\t\t};\n\t}\n\n\tinitDevTools();\n\n})));\n//# sourceMappingURL=devtools.js.map\n"]}