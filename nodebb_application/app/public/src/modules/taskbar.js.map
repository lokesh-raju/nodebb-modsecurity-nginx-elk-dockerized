{"version":3,"sources":["public/src/modules/taskbar.js"],"names":["define","Benchpress","translator","taskbar","init","self","this","parse","html","$","tasklist","find","document","body","append","on","$btn","module","attr","uuid","require","hasClass","minimizeAll","load","toggleNew","app","alternatingTitle","removeClass","addClass","minimize","window","closeAll","close","btnEl","fnName","length","selector","each","idx","el","getAttribute","discard","remove","update","push","options","callback","element","data","trigger","createTaskbarItem","get","items","map","toggleClass","state","silent","updateActive","tasks","filter","isActive","taskBtn","removeAttr","translate","title","taskTitle","text","taskbarEl","className","image","icon","data-module","data-uuid","undefined","processUpdate","key","value","css","Object","keys","forEach","updateTitle","newTitle","console","warn"],"mappings":"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","file":"public/src/modules/taskbar.js","sourcesContent":["'use strict';\n\n\ndefine('taskbar', ['benchpress', 'translator'], function (Benchpress, translator) {\n\tvar taskbar = {};\n\n\ttaskbar.init = function () {\n\t\tvar self = this;\n\n\t\tBenchpress.parse('modules/taskbar', {}, function (html) {\n\t\t\tself.taskbar = $(html);\n\t\t\tself.tasklist = self.taskbar.find('ul');\n\t\t\t$(document.body).append(self.taskbar);\n\n\t\t\tself.taskbar.on('click', 'li', function () {\n\t\t\t\tvar\t$btn = $(this);\n\t\t\t\tvar module = $btn.attr('data-module');\n\t\t\t\tvar uuid = $btn.attr('data-uuid');\n\n\t\t\t\trequire([module], function (module) {\n\t\t\t\t\tif (!$btn.hasClass('active')) {\n\t\t\t\t\t\tminimizeAll();\n\t\t\t\t\t\tmodule.load(uuid);\n\t\t\t\t\t\ttaskbar.toggleNew(uuid, false);\n\t\t\t\t\t\tapp.alternatingTitle('');\n\n\t\t\t\t\t\ttaskbar.tasklist.removeClass('active');\n\t\t\t\t\t\t$btn.addClass('active');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmodule.minimize(uuid);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn false;\n\t\t\t});\n\t\t});\n\n\t\t$(window).on('action:app.loggedOut', function () {\n\t\t\ttaskbar.closeAll();\n\t\t});\n\t};\n\n\ttaskbar.close = function (module, uuid) {\n\t\t// Sends signal to the appropriate module's .close() fn (if present)\n\t\tvar btnEl = taskbar.tasklist.find('[data-module=\"' + module + '\"][data-uuid=\"' + uuid + '\"]');\n\t\tvar fnName = 'close';\n\n\t\t// TODO: Refactor chat module to not take uuid in close instead of by jQuery element\n\t\tif (module === 'chat') {\n\t\t\tfnName = 'closeByUUID';\n\t\t}\n\n\t\tif (btnEl.length) {\n\t\t\trequire([module], function (module) {\n\t\t\t\tif (typeof module[fnName] === 'function') {\n\t\t\t\t\tmodule[fnName](uuid);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\ttaskbar.closeAll = function (module) {\n\t\t// module is optional\n\t\tvar selector = '[data-uuid]';\n\n\t\tif (module) {\n\t\t\tselector = '[data-module=\"' + module + '\"]' + selector;\n\t\t}\n\n\t\ttaskbar.tasklist.find(selector).each(function (idx, el) {\n\t\t\ttaskbar.close(module || el.getAttribute('data-module'), el.getAttribute('data-uuid'));\n\t\t});\n\t};\n\n\ttaskbar.discard = function (module, uuid) {\n\t\tvar btnEl = taskbar.tasklist.find('[data-module=\"' + module + '\"][data-uuid=\"' + uuid + '\"]');\n\t\tbtnEl.remove();\n\n\t\tupdate();\n\t};\n\n\ttaskbar.push = function (module, uuid, options, callback) {\n\t\tcallback = callback || function () {};\n\t\tvar element = taskbar.tasklist.find('li[data-uuid=\"' + uuid + '\"]');\n\n\t\tvar data = {\n\t\t\tmodule: module,\n\t\t\tuuid: uuid,\n\t\t\toptions: options,\n\t\t\telement: element,\n\t\t};\n\n\t\t$(window).trigger('filter:taskbar.push', data);\n\n\t\tif (!element.length && data.module) {\n\t\t\tcreateTaskbarItem(data, callback);\n\t\t} else {\n\t\t\tcallback(element);\n\t\t}\n\t};\n\n\ttaskbar.get = function (module) {\n\t\tvar items = $('[data-module=\"' + module + '\"]').map(function (idx, el) {\n\t\t\treturn $(el).data();\n\t\t});\n\n\t\treturn items;\n\t};\n\n\ttaskbar.minimize = function (module, uuid) {\n\t\tvar btnEl = taskbar.tasklist.find('[data-module=\"' + module + '\"][data-uuid=\"' + uuid + '\"]');\n\t\tbtnEl.toggleClass('active', false);\n\t};\n\n\ttaskbar.toggleNew = function (uuid, state, silent) {\n\t\tvar btnEl = taskbar.tasklist.find('[data-uuid=\"' + uuid + '\"]');\n\t\tbtnEl.toggleClass('new', state);\n\n\t\tif (!silent) {\n\t\t\t$(window).trigger('action:taskbar.toggleNew', uuid);\n\t\t}\n\t};\n\n\ttaskbar.updateActive = function (uuid) {\n\t\tvar\ttasks = taskbar.tasklist.find('li');\n\t\ttasks.removeClass('active');\n\t\ttasks.filter('[data-uuid=\"' + uuid + '\"]').addClass('active');\n\n\t\t$('[data-uuid]:not([data-module])').toggleClass('modal-unfocused', true);\n\t\t$('[data-uuid=\"' + uuid + '\"]:not([data-module])').toggleClass('modal-unfocused', false);\n\t};\n\n\ttaskbar.isActive = function (uuid) {\n\t\tvar taskBtn = taskbar.tasklist.find('li[data-uuid=\"' + uuid + '\"]');\n\t\treturn taskBtn.hasClass('active');\n\t};\n\n\tfunction update() {\n\t\tvar\ttasks = taskbar.tasklist.find('li');\n\n\t\tif (tasks.length > 0) {\n\t\t\ttaskbar.taskbar.attr('data-active', '1');\n\t\t} else {\n\t\t\ttaskbar.taskbar.removeAttr('data-active');\n\t\t}\n\t}\n\n\tfunction minimizeAll() {\n\t\ttaskbar.tasklist.find('.active').removeClass('active');\n\t}\n\n\tfunction createTaskbarItem(data, callback) {\n\t\ttranslator.translate(data.options.title, function (taskTitle) {\n\t\t\tvar title = $('<div></div>').text(taskTitle || 'NodeBB Task').html();\n\n\t\t\tvar\ttaskbarEl = $('<li></li>')\n\t\t\t\t.addClass(data.options.className)\n\t\t\t\t.html('<a href=\"#\"' + (data.options.image ? ' style=\"background-image: url(\\'' + data.options.image + '\\'); background-size: cover;\"' : '') + '>' +\n\t\t\t\t\t(data.options.icon ? '<i class=\"fa ' + data.options.icon + '\"></i> ' : '') +\n\t\t\t\t\t'<span component=\"taskbar/title\">' + title + '</span>' +\n\t\t\t\t\t'</a>')\n\t\t\t\t.attr({\n\t\t\t\t\ttitle: title,\n\t\t\t\t\t'data-module': data.module,\n\t\t\t\t\t'data-uuid': data.uuid,\n\t\t\t\t})\n\t\t\t\t.addClass(data.options.state !== undefined ? data.options.state : 'active');\n\n\t\t\tif (!data.options.state || data.options.state === 'active') {\n\t\t\t\tminimizeAll();\n\t\t\t}\n\n\t\t\ttaskbar.tasklist.append(taskbarEl);\n\t\t\tupdate();\n\n\t\t\tdata.element = taskbarEl;\n\n\t\t\ttaskbarEl.data(data);\n\t\t\t$(window).trigger('action:taskbar.pushed', data);\n\t\t\tcallback(taskbarEl);\n\t\t});\n\t}\n\n\tvar processUpdate = function (element, key, value) {\n\t\tswitch (key) {\n\t\t\tcase 'title':\n\t\t\t\telement.find('[component=\"taskbar/title\"]').text(value);\n\t\t\t\tbreak;\n\t\t\tcase 'icon':\n\t\t\t\telement.find('i').attr('class', 'fa fa-' + value);\n\t\t\t\tbreak;\n\t\t\tcase 'image':\n\t\t\t\telement.find('a').css('background-image', 'url(\"' + value + '\")');\n\t\t\t\tbreak;\n\t\t\tcase 'background-color':\n\t\t\t\telement.find('a').css('background-color', value);\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\ttaskbar.update = function (module, uuid, options) {\n\t\tvar element = taskbar.tasklist.find('[data-module=\"' + module + '\"][data-uuid=\"' + uuid + '\"]');\n\t\tif (!element.length) {\n\t\t\treturn;\n\t\t}\n\t\tvar data = element.data();\n\n\t\tObject.keys(options).forEach(function (key) {\n\t\t\tdata[key] = options[key];\n\t\t\tprocessUpdate(element, key, options[key]);\n\t\t});\n\n\t\telement.data(data);\n\t};\n\n\ttaskbar.updateTitle = function (module, uuid, newTitle) {\n\t\tconsole.warn('[taskbar] .updateTitle() is deprecated, use .update() instead');\n\t\ttaskbar.tasklist.find('[data-module=\"' + module + '\"][data-uuid=\"' + uuid + '\"] [component=\"taskbar/title\"]').text(newTitle);\n\t};\n\n\treturn taskbar;\n});\n"]}